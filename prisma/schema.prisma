// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../lib/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Hospital {
  id          String    @id @default(uuid())
  name        String
  subdomain   String    @unique
  description String?
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  settings    Json
  branding    Json?
  users       User[]
  patients    Patient[]
}

model User {
  id          String    @id @default(uuid())
  email       String    @unique
  password    String
  name        String?
  role        String
  profileImage String?   // URL or base64 of profile image
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  hospitalId  String?
  hospital    Hospital? @relation(fields: [hospitalId], references: [id])
  // Doctor-Patient relation will be handled through a separate table in PostgreSQL
  appointments Appointment[]
  medicalRecords MedicalRecord[]
  chatParticipations ChatParticipant[]
  messages Message[]
}

model Patient {
  id              String    @id @default(uuid())
  medicalNumber   String    @unique // 10-digit identifier
  mrn             String?   // Optional hospital-specific medical record number
  resourceType    String    @default("Patient") // FHIR resource type
  active          Boolean   @default(true)
  
  // Demographic information
  name            Json      // FHIR HumanName structure (given, family, prefix, suffix, etc.)
  telecom         Json?     // FHIR ContactPoint array (phone, email, etc.)
  gender          String    // FHIR AdministrativeGender
  birthDate       DateTime
  deceased        Boolean   @default(false)
  deceasedDateTime DateTime?
  
  // Contact information
  address         Json?     // FHIR Address array
  maritalStatus   Json?     // FHIR CodeableConcept
  multipleBirth   Boolean?  // Whether patient is part of multiple birth
  multipleBirthInteger Int? // Birth order
  photo           String?   // URL to patient photo
  
  // Contact parties
  contact         Json?     // FHIR Patient.contact array
  communication   Json?     // FHIR Communication preferences
  
  // Patient account data
  managingOrganization String? // Reference to hospital/organization
  email           String?   // Email for patient portal access
  phone           String?   // Phone number with country code
  password        String?   // Hashed password for patient portal access
  resetCode       String?   // Password reset code
  resetExpiration DateTime? // Reset code expiration time
  verificationCode String?  // Email verification code
  verificationExpiry DateTime? // Verification code expiration time
  isVerified      Boolean   @default(false) // Whether email has been verified
  
  // Clinical Information
  generalPractitioner Json?  // FHIR Reference to care providers
  medicalHistory    Json?    // FHIR conditions summary
  
  // Timestamps and relations
  createdAt       DateTime  @default(now())
  updatedAt       DateTime  @updatedAt
  
  // FHIR extensions
  extension       Json?     // Additional FHIR extension fields
  
  // Relationships
  hospitalId      String?
  hospital        Hospital? @relation(fields: [hospitalId], references: [id])
  // Doctor-Patient relationship managed through a join table in PostgreSQL
  appointments    Appointment[]
  records         MedicalRecord[]
}

model Appointment {
  id              String    @id @default(uuid())
  resourceType    String    @default("Appointment") // FHIR resource type
  patientId       String
  patient         Patient   @relation(fields: [patientId], references: [id])
  doctorId        String
  doctor          User      @relation(fields: [doctorId], references: [id])
  status          String    // FHIR AppointmentStatus (booked, cancelled, etc.)
  start           DateTime  // Appointment start time
  end             DateTime? // Appointment end time
  minutesDuration Int?      // Duration in minutes
  description     String?   // Description of the appointment
  serviceType     Json?     // FHIR CodeableConcept for service type
  specialty       Json?     // FHIR CodeableConcept for specialty
  appointmentType Json?     // FHIR CodeableConcept for appointment type
  reason          Json?     // FHIR CodeableConcept for reason
  priority        Int?      // Priority of the appointment (1-9)
  comment         String?   // Comments about the appointment
  extension       Json?     // FHIR extensions
  createdAt       DateTime  @default(now())
  updatedAt       DateTime  @updatedAt
  hospitalId      String?   // Optional reference to hospital
}

model MedicalRecord {
  id              String    @id @default(uuid())
  resourceType    String    // FHIR resource type (Observation, Condition, Procedure, etc.)
  patientId       String
  patient         Patient   @relation(fields: [patientId], references: [id])
  doctorId        String
  doctor          User      @relation(fields: [doctorId], references: [id])
  
  // Clinical information
  status          String    // FHIR status (preliminary, final, amended, etc.)
  category        Json?     // FHIR CodeableConcept for category
  code            Json      // FHIR CodeableConcept describing what was observed
  valueString     String?   // String result
  valueQuantity   Json?     // Numeric result with units
  valueCodeableConcept Json? // Result as a codeable concept
  interpretation  Json?     // FHIR CodeableConcept for interpretation (normal, abnormal, etc.)
  bodySite        Json?     // FHIR CodeableConcept for body site
  method          Json?     // FHIR CodeableConcept for method
  specimen        String?   // Reference to Specimen
  device          String?   // Reference to Device
  referenceRange  Json?     // Reference ranges for the result
  hasMember       Json?     // Related observations
  derivedFrom     Json?     // Related observations from which this is derived
  
  // Record data
  effectiveDateTime DateTime // When the observation was made
  issued          DateTime  // Date/Time issued
  performer       Json?     // Who is responsible for the observation
  note            Json?     // Comments about the observation
  extension       Json?     // FHIR extensions
  
  // Meta
  createdAt       DateTime  @default(now())
  updatedAt       DateTime  @updatedAt
  hospitalId      String?   // Optional reference to hospital
}

model SystemSettings {
  id        String   @id @default(uuid())
  key       String   @unique
  value     String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Chat {
  id            String    @id @default(uuid())
  name          String?   // Optional name for group chats
  type          String    // 'direct', 'group', 'broadcast'
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
  messages      Message[]
  participants  ChatParticipant[]
}

model ChatParticipant {
  id        String   @id @default(uuid())
  chatId    String
  userId    String
  chat      Chat     @relation(fields: [chatId], references: [id], onDelete: Cascade)
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  isAdmin   Boolean  @default(false)  // Chat admin can add/remove participants
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@unique([chatId, userId])
}

model Message {
  id          String    @id @default(uuid())
  chatId      String
  senderId    String
  content     String
  isRead      Boolean   @default(false)
  readBy      Json?     // Array of user IDs who have read the message
  sentAt      DateTime  @default(now())
  chat        Chat      @relation(fields: [chatId], references: [id], onDelete: Cascade)
  sender      User      @relation(fields: [senderId], references: [id], onDelete: Cascade)
}
